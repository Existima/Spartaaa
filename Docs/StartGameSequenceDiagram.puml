@startuml
actor Player1

Player1 -> Player1: show connection screen
Player1->Server: connect
alt on connection error repeat each 10 sec
    Player1->Server: connect
end
Player1 -> Player1: show start screen

Player1->Server: startNewGame(String playerName)
Activate Server
rnote over Server
 Server:
    -creates new game
    -generates password
    -creates and shuffles deck
    -decides on available Houses
    -sets GameState to NEW
    -links gameId and players name with players ws session
endrnote
Server->Player1: GameState, List<Dominus> available dominus list
Player1->Server: selectDominus(Dominus selectedDominus)

== waiting for players ==
actor Player2
Player2->Server: connect
alt on connection error repeat each 10 sec
    Player2->Server: connect
end
Player2 -> Player2: show start screen
Player2 -> Server:joinGame(String gameId, String base64password, String playerName)
rnote over Server
 Server:
    -searches for NEW game with given gameId
    -checks given password
    -links gameId and players name with players ws session
endrnote
Server -> Player2:GameState, List<Dominus> available dominus list
Player2->Server: selectDominus(Dominus selectedDominus)
Server->Player1: GameState (server notifies all players about joined player)
Server->Player2: GameState (server notifies all players about joined player)
Player1->Player1: startGame button active
Player1->Server: startGame()
rnote over Server
 Server:
    -deals cards according Dominus description
    -deals money according Dominus description
endrnote
Server->Player1: GameState (server notifies all players about game started)
Server->Player2: GameState (server notifies all players about game started)
Player1->Player1: show Intrigue Phase screen
Player2->Player2: show Intrigue Phase screen
@enduml